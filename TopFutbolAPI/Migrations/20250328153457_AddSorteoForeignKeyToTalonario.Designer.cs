// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TopFutbolAPI.Data;

#nullable disable

namespace TopFutbolAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250328153457_AddSorteoForeignKeyToTalonario")]
    partial class AddSorteoForeignKeyToTalonario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TopFutbolAPI.Models.Alumno", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdFormador")
                        .HasColumnType("int");

                    b.Property<int>("IdSede")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdFormador");

                    b.HasIndex("IdSede");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.BalanceAlumno", b =>
                {
                    b.Property<int>("IdBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBalance"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdAlumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdSede")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdBalance");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdSede");

                    b.ToTable("BalancesAlumnos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<int?>("FormadorIdFormador")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.HasIndex("FormadorIdFormador");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Formador", b =>
                {
                    b.Property<int>("IdFormador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFormador"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFormador");

                    b.ToTable("Formadores");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Movimiento", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<string>("Caja")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("IdAlumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdSede")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoRecaudo")
                        .HasColumnType("int");

                    b.Property<string>("Soporte")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdSede");

                    b.HasIndex("IdServicio");

                    b.HasIndex("IdTipo");

                    b.HasIndex("IdTipoRecaudo");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Sede", b =>
                {
                    b.Property<int>("IdSede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSede"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreSede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSede");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Sorteo", b =>
                {
                    b.Property<int>("IdSorteo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSorteo"));

                    b.Property<int>("BoletasDisponibles")
                        .HasColumnType("int");

                    b.Property<int>("BoletasVendidas")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSorteo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Premio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalBoletas")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorBoleta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdSorteo");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Sorteos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoBoleta", b =>
                {
                    b.Property<int>("IdBoleta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBoleta"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdAlumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdSorteo")
                        .HasColumnType("int");

                    b.Property<int>("IdTalonario")
                        .HasColumnType("int");

                    b.Property<string>("NombreComprador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroBoleta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoComprador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBoleta");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdSorteo");

                    b.HasIndex("IdTalonario");

                    b.ToTable("SorteoBoletas");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoMovimiento", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdAlumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdBoleta")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdBoleta");

                    b.ToTable("SorteoMovimientos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoPago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdAlumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdBoleta")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdBoleta");

                    b.ToTable("SorteoPagos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoTalonario", b =>
                {
                    b.Property<int>("IdTalonario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTalonario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CantidadBoletas")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSorteo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSorteo")
                        .HasColumnType("int");

                    b.Property<int>("NumeroFinal")
                        .HasColumnType("int");

                    b.Property<int>("NumeroInicial")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorBoleta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTalonario");

                    b.HasIndex("IdSorteo");

                    b.ToTable("SorteosTalonarios");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.TipoMovimiento", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipo");

                    b.ToTable("TiposMovimiento");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.TipoRecaudo", b =>
                {
                    b.Property<int>("IdTipoRecaudo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoRecaudo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTipoRecaudo");

                    b.ToTable("TiposRecaudo");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Alumno", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Categoria", "Categoria")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.Formador", "Formador")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdFormador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.Sede", "Sede")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdSede")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Formador");

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.BalanceAlumno", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.Sede", "Sede")
                        .WithMany()
                        .HasForeignKey("IdSede")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Categoria", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Formador", null)
                        .WithMany("Categorias")
                        .HasForeignKey("FormadorIdFormador")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Movimiento", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Alumno", "Alumno")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.Sede", "Sede")
                        .WithMany()
                        .HasForeignKey("IdSede")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.TipoRecaudo", "TipoRecaudo")
                        .WithMany()
                        .HasForeignKey("IdTipoRecaudo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Sede");

                    b.Navigation("Servicio");

                    b.Navigation("TipoMovimiento");

                    b.Navigation("TipoRecaudo");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Sorteo", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoBoleta", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.Sorteo", "Sorteo")
                        .WithMany("Boletas")
                        .HasForeignKey("IdSorteo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.SorteoTalonario", "Talonario")
                        .WithMany("Boletas")
                        .HasForeignKey("IdTalonario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Sorteo");

                    b.Navigation("Talonario");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoMovimiento", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.SorteoBoleta", "Boleta")
                        .WithMany()
                        .HasForeignKey("IdBoleta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Boleta");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoPago", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TopFutbolAPI.Models.SorteoBoleta", "Boleta")
                        .WithMany()
                        .HasForeignKey("IdBoleta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Boleta");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoTalonario", b =>
                {
                    b.HasOne("TopFutbolAPI.Models.Sorteo", "Sorteo")
                        .WithMany()
                        .HasForeignKey("IdSorteo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Sorteo");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Alumno", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Categoria", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Formador", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("Categorias");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Sede", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.Sorteo", b =>
                {
                    b.Navigation("Boletas");
                });

            modelBuilder.Entity("TopFutbolAPI.Models.SorteoTalonario", b =>
                {
                    b.Navigation("Boletas");
                });
#pragma warning restore 612, 618
        }
    }
}
